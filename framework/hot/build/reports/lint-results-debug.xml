<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0">

    <issue
        id="DiscouragedPrivateApi"
        severity="Warning"
        message="Reflective access to getRuntime, which is not part of the public SDK and therefore likely to change in future Android releases"
        category="Correctness"
        priority="6"
        summary="Using Discouraged Private API"
        explanation="Usage of restricted non-SDK interface may throw an exception at runtime. Accessing non-SDK methods or fields through reflection has a high likelihood to break your app between versions, and is being restricted to facilitate future app compatibility."
        url="https://developer.android.com/preview/restrictions-non-sdk-interfaces"
        urls="https://developer.android.com/preview/restrictions-non-sdk-interfaces"
        errorLine1="        val getRuntime = vmRuntimeClass.getDeclaredMethod(&quot;getRuntime&quot;)"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/src/main/java/com/wobbz/framework/hot/DexPatcher.kt"
            line="85"
            column="26"/>
    </issue>

    <issue
        id="DiscouragedPrivateApi"
        severity="Warning"
        message="Reflective access to getRuntime, which is not part of the public SDK and therefore likely to change in future Android releases"
        category="Correctness"
        priority="6"
        summary="Using Discouraged Private API"
        explanation="Usage of restricted non-SDK interface may throw an exception at runtime. Accessing non-SDK methods or fields through reflection has a high likelihood to break your app between versions, and is being restricted to facilitate future app compatibility."
        url="https://developer.android.com/preview/restrictions-non-sdk-interfaces"
        urls="https://developer.android.com/preview/restrictions-non-sdk-interfaces"
        errorLine1="            val getRuntime = vmRuntimeClass.getDeclaredMethod(&quot;getRuntime&quot;)"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/src/main/java/com/wobbz/framework/hot/DexPatcher.kt"
            line="225"
            column="30"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of org.jetbrains.kotlin:kotlin-stdlib than 1.9.0 is available: 2.0.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &quot;org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlinVersion}&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/build.gradle"
            line="30"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.annotation:annotation than 1.5.0 is available: 1.9.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.annotation:annotation:1.5.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/build.gradle"
            line="31"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of org.jetbrains.kotlinx:kotlinx-coroutines-android than 1.6.4 is available: 1.7.3"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/build.gradle"
            line="34"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.squareup.okhttp3:okhttp than 4.10.0 is available: 4.12.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.squareup.okhttp3:okhttp:4.10.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/build.gradle"
            line="37"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of org.mockito:mockito-core than 4.0.0 is available: 4.11.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    testImplementation &apos;org.mockito:mockito-core:4.0.0&apos;"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/build.gradle"
            line="41"
            column="24"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is never &lt; 31"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.S) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/src/main/java/com/wobbz/framework/hot/DexPatcher.kt"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 31"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                Build.VERSION.SDK_INT >= Build.VERSION_CODES.S -> {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/src/main/java/com/wobbz/framework/hot/DexPatcher.kt"
            line="64"
            column="17"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields (static reference to `HotReloadManager` which has field `context` pointing to `Context`); this is a memory leak"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="        @Volatile"
        errorLine2="        ^">
        <location
            file="/Users/pentester/Tools/LSPosedKit/framework/hot/src/main/java/com/wobbz/framework/hot/HotReloadManager.kt"
            line="243"
            column="9"/>
    </issue>

</issues>
