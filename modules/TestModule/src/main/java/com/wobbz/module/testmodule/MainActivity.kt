package com.wobbz.module.testmodule

import android.app.Activity
import android.app.AlertDialog
import android.os.Bundle

/**
 * Main activity for TestModule module.
 * Provides test information and usage guidance.
 */
class MainActivity : Activity() {
    
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        
        showTestInfo()
    }
    
    private fun showTestInfo() {
        val message = buildString {
            appendLine("TestModule")
            appendLine()
            appendLine("This is a test module generated by the LSPosedKit scaffolding system.")
            appendLine()
            appendLine("Purpose:")
            appendLine("• Validate module generation")
            appendLine("• Test framework integration")
            appendLine("• Example implementation reference")
            appendLine("• Development template")
            appendLine()
            appendLine("Generated Components:")
            appendLine("• Main module class with @XposedPlugin")
            appendLine("• LSPosed bridge (LSPosedEntry.kt)")
            appendLine("• Example hooks implementation")
            appendLine("• Settings schema and UI")
            appendLine("• Unit tests template")
            appendLine()
            appendLine("Targeting:")
            appendLine("• Default: All apps (*)")
            appendLine("• Modify target_packages in settings")
            appendLine("• Use LSPosed scope for app selection")
            appendLine()
            appendLine("Customization:")
            appendLine("• Replace example hooks with real implementation")
            appendLine("• Update settings.json for your configuration")
            appendLine("• Modify module metadata as needed")
            appendLine("• Add your specific functionality")
            appendLine()
            appendLine("This module demonstrates the LSPosedKit scaffolding output.")
        }
        
        AlertDialog.Builder(this)
            .setTitle("TestModule - Generated Module")
            .setMessage(message)
            .setPositiveButton("OK") { _, _ -> finish() }
            .setOnCancelListener { finish() }
            .show()
    }
}
